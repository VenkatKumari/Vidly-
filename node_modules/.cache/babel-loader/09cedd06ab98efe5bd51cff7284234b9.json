{"ast":null,"code":"var _jsxFileName = \"/home/viks/Documents/Vidly-/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./common/searchBox\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n      deleteMovie(movie._id);\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].isliked = !movies[index].isliked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        sortColumn,\n        selectedGenre,\n        searchQuery,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await getGenres();\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...data];\n    const {\n      data: movies\n    } = await getMovies();\n    this.setState({\n      movies,\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"There are no movies in the database\");\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/movies/new\",\n      className: \"btn btn-primary\",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"New Movie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Showing \", totalCount, \" movies in the database\"), /*#__PURE__*/React.createElement(SearchBox, {\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onDelete: this.handleDelete,\n      onLike: this.handleLike,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/viks/Documents/Vidly-/src/components/movies.jsx"],"names":["React","Component","Link","MoviesTable","ListGroup","Pagination","SearchBox","getMovies","deleteMovie","getGenres","paginate","_","Movies","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","isliked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./common/searchBox\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    deleteMovie(movie._id);\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].isliked = !movies[index].isliked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database</p>;\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n\n        <div className=\"col\">\n          <Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the database</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onLike={this.handleLike}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}